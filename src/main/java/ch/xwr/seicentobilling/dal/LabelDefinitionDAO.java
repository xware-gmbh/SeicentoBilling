
package ch.xwr.seicentobilling.dal;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.ParameterExpression;
import javax.persistence.criteria.Root;

import com.rapidclipse.framework.server.jpa.dal.JpaDataAccessObject;

import ch.xwr.seicentobilling.entities.LabelDefinition;
import ch.xwr.seicentobilling.entities.LabelDefinition_;
import ch.xwr.seicentobilling.entities.Vat;

/**
 * Home object for domain model class Vat.
 *
 * @see Vat
 */
public class LabelDefinitionDAO extends JpaDataAccessObject.Default<LabelDefinition, Long> {
	public LabelDefinitionDAO() {
		super(LabelDefinition.class);
	}

	/**
	 * @queryMethod Do not edit, method is generated by editor!
	 */
	public List<LabelDefinition> findByName(final String name) {
		final EntityManager entityManager = em();

		final CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();

		final ParameterExpression<String> nameParameter = criteriaBuilder.parameter(String.class, "name");

		final CriteriaQuery<LabelDefinition> criteriaQuery = criteriaBuilder.createQuery(LabelDefinition.class);

		final Root<LabelDefinition> root = criteriaQuery.from(LabelDefinition.class);

		criteriaQuery.where(criteriaBuilder.and(
				criteriaBuilder.equal(criteriaBuilder.upper(root.get(LabelDefinition_.cldText)),
						criteriaBuilder.upper(nameParameter)),
				criteriaBuilder.equal(root.get(LabelDefinition_.cldState), criteriaBuilder.literal(1))));

		final TypedQuery<LabelDefinition> query = entityManager.createQuery(criteriaQuery);
		query.setParameter(nameParameter, name);
		return query.getResultList();
	}
}