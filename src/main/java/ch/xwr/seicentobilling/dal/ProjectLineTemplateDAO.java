
package ch.xwr.seicentobilling.dal;

import java.util.Iterator;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.ParameterExpression;
import javax.persistence.criteria.Root;

import com.rapidclipse.framework.server.jpa.dal.JpaDataAccessObject;

import ch.xwr.seicentobilling.entities.CostAccount;
import ch.xwr.seicentobilling.entities.ProjectLine;
import ch.xwr.seicentobilling.entities.ProjectLineTemplate;
import ch.xwr.seicentobilling.entities.ProjectLineTemplate_;

/**
 * Home object for domain model class ProjectLine.
 *
 * @see ProjectLine
 */
public class ProjectLineTemplateDAO extends JpaDataAccessObject.Default<ProjectLineTemplate, Long> {
	public ProjectLineTemplateDAO() {
		super(ProjectLineTemplate.class);
	}


	public ProjectLineTemplate findByKeyNumber(final CostAccount csaDao, final int keynumber){
		ProjectLineTemplate retObj = null;

		final List<ProjectLineTemplate> lst = findByCostAccount(csaDao);
		for (final Iterator<ProjectLineTemplate> iterator = lst.iterator(); iterator.hasNext();) {
			final ProjectLineTemplate projectLineTemplate = iterator.next();

			if (projectLineTemplate.getPrtKeyNumber() == keynumber) {
				retObj = projectLineTemplate;
				break;
			}
		}

		return retObj;
	}

	/**
	 * @queryMethod Do not edit, method is generated by editor!
	 */
	public List<ProjectLineTemplate> findByCostAccount(final CostAccount dao) {
		final EntityManager entityManager = em();

		final CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();

		final ParameterExpression<CostAccount> daoParameter = criteriaBuilder.parameter(CostAccount.class, "dao");

		final CriteriaQuery<ProjectLineTemplate> criteriaQuery = criteriaBuilder.createQuery(ProjectLineTemplate.class);

		final Root<ProjectLineTemplate> root = criteriaQuery.from(ProjectLineTemplate.class);

		criteriaQuery.where(criteriaBuilder.equal(root.get(ProjectLineTemplate_.costAccount), daoParameter));

		criteriaQuery.orderBy(criteriaBuilder.asc(root.get(ProjectLineTemplate_.prtKeyNumber)));

		final TypedQuery<ProjectLineTemplate> query = entityManager.createQuery(criteriaQuery);
		query.setParameter(daoParameter, dao);
		return query.getResultList();
	}

}