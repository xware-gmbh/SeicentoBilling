
package ch.xwr.seicentobilling.ui;

import java.time.LocalDate;
import java.time.Month;

import com.rapidclipse.framework.server.data.converter.ConverterBuilder;
import com.rapidclipse.framework.server.data.format.NumberFormatBuilder;
import com.rapidclipse.framework.server.resources.CaptionUtils;
import com.rapidclipse.framework.server.resources.StringResourceUtils;
import com.rapidclipse.framework.server.ui.ItemLabelGeneratorFactory;
import com.rapidclipse.framework.server.ui.StartsWithIgnoreCaseItemFilter;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.combobox.ComboBox;
import com.vaadin.flow.component.datepicker.DatePicker;
import com.vaadin.flow.component.dialog.Dialog;
import com.vaadin.flow.component.formlayout.FormLayout;
import com.vaadin.flow.component.formlayout.FormLayout.FormItem;
import com.vaadin.flow.component.html.Label;
import com.vaadin.flow.component.icon.VaadinIcon;
import com.vaadin.flow.component.notification.Notification;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.component.splitlayout.SplitLayout;
import com.vaadin.flow.component.textfield.TextField;
import com.vaadin.flow.data.binder.Binder;
import com.vaadin.flow.data.provider.DataProvider;

import ch.xwr.seicentobilling.business.LovState;
import ch.xwr.seicentobilling.business.LovState.State;
import ch.xwr.seicentobilling.dal.EntityDAO;
import ch.xwr.seicentobilling.dal.RowObjectDAO;
import ch.xwr.seicentobilling.entities.Entity;
import ch.xwr.seicentobilling.entities.RowObject;


public class RowObjectView extends VerticalLayout
{
	
	/**
	 *
	 */
	public RowObjectView()
	{
		super();
		this.initUI();
		this.txtObjState.setItems(LovState.State.values());
	}
	
	/**
	 *
	 */
	public RowObjectView(final long rowid, final String entName)
	{
		super();
		this.initUI();
		this.txtObjState.setItems(LovState.State.values());

		this.loadUI(rowid, entName);
	}
	
	public static Dialog getPopupWindow()
	{
		final Dialog win = new Dialog();
		win.setWidth("1140");
		win.setHeight("760");
		win.setSizeFull();
		win.setModal(true);
		win.setResizable(true);
		final Button cancelButton = new Button("", e -> {
			win.close();
		});
		cancelButton.setIcon(VaadinIcon.CLOSE.create());
		cancelButton.getStyle().set("float", "right");
		win.add(cancelButton);
		return win;
	}
	
	private void loadUI(final long rowid, final String entName)
	{
		final RowObjectDAO objDao = new RowObjectDAO();
		final RowObject    obj    = objDao.getObjectBase(entName, rowid);

		if(obj == null)
		{
			Notification.show("Kein Record gefunden!", 5000, Notification.Position.BOTTOM_END);
		}
		else
		{
			this.binder.setBean(obj);
		}
		
	}

	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.splitLayout     = new SplitLayout();
		this.formLayout      = new FormLayout();
		this.formItem        = new FormItem();
		this.lblObjId        = new Label();
		this.txtObjId        = new TextField();
		this.formItem12      = new FormItem();
		this.lblObjAdded     = new Label();
		this.dateObjAdded    = new DatePicker();
		this.formItem13      = new FormItem();
		this.lblObjDeleted   = new Label();
		this.dateObjDeleted  = new DatePicker();
		this.formItem7       = new FormItem();
		this.lblObjChanged   = new Label();
		this.dateObjChanged  = new DatePicker();
		this.formItem3       = new FormItem();
		this.lblEntity       = new Label();
		this.cmbEntity       = new ComboBox<>();
		this.formItem4       = new FormItem();
		this.lblObjAddedBy   = new Label();
		this.txtObjAddedBy   = new TextField();
		this.formItem5       = new FormItem();
		this.lblObjDeletedBy = new Label();
		this.txtObjDeletedBy = new TextField();
		this.formItem9       = new FormItem();
		this.lblObjChangedBy = new Label();
		this.txtObjChangedBy = new TextField();
		this.formItem6       = new FormItem();
		this.lblObjRowId     = new Label();
		this.txtObjRowId     = new TextField();
		this.formItem8       = new FormItem();
		this.lblObjChngcnt   = new Label();
		this.txtObjChngcnt   = new TextField();
		this.formItem10      = new FormItem();
		this.lblObjState     = new Label();
		this.txtObjState     = new ComboBox<>();
		this.binder          = new Binder<>();

		this.splitLayout.setOrientation(SplitLayout.Orientation.VERTICAL);
		this.formLayout.setResponsiveSteps(
			new FormLayout.ResponsiveStep("0px", 1, FormLayout.ResponsiveStep.LabelsPosition.TOP),
			new FormLayout.ResponsiveStep("500px", 4, FormLayout.ResponsiveStep.LabelsPosition.TOP),
			new FormLayout.ResponsiveStep("1000px", 4, FormLayout.ResponsiveStep.LabelsPosition.ASIDE));
		this.lblObjId.setText(StringResourceUtils.optLocalizeString("{$lblObjId.value}", this));
		this.txtObjId.setReadOnly(true);
		this.lblObjAdded.setText(StringResourceUtils.optLocalizeString("{$lblObjAdded.value}", this));
		this.dateObjAdded.setReadOnly(true);
		this.lblObjDeleted.setText(StringResourceUtils.optLocalizeString("{$lblObjDeleted.value}", this));
		this.lblObjChanged.setText(StringResourceUtils.optLocalizeString("{$lblObjChanged.value}", this));
		this.lblEntity.setText(StringResourceUtils.optLocalizeString("{$lblEntity.value}", this));
		this.cmbEntity.setDataProvider(StartsWithIgnoreCaseItemFilter.New(this.cmbEntity::getItemLabelGenerator),
			DataProvider.ofCollection(new EntityDAO().findAll()));
		this.cmbEntity.setItemLabelGenerator(ItemLabelGeneratorFactory.NonNull(Entity::getEntName));
		this.lblObjAddedBy.setText(StringResourceUtils.optLocalizeString("{$lblObjAddedBy.value}", this));
		this.lblObjDeletedBy.setText(StringResourceUtils.optLocalizeString("{$lblObjDeletedBy.value}", this));
		this.lblObjChangedBy.setText(StringResourceUtils.optLocalizeString("{$lblObjChangedBy.value}", this));
		this.lblObjRowId.setText(StringResourceUtils.optLocalizeString("{$lblObjRowId.value}", this));
		this.lblObjChngcnt.setText(StringResourceUtils.optLocalizeString("{$lblObjChngcnt.value}", this));
		this.lblObjState.setText(StringResourceUtils.optLocalizeString("{$lblObjState.value}", this));
		this.txtObjState.setItemLabelGenerator(ItemLabelGeneratorFactory.NonNull(CaptionUtils::resolveCaption));

		this.binder.forField(this.txtObjId).withNullRepresentation("")
			.withConverter(ConverterBuilder.StringToLong().numberFormatBuilder(NumberFormatBuilder.Integer()).build())
			.bind(RowObject::getObjId, RowObject::setObjId).setReadOnly(true);
		this.binder.forField(this.dateObjAdded).withNullRepresentation(LocalDate.of(2020, Month.NOVEMBER, 18))
			.withConverter(ConverterBuilder.LocalDateToUtilDate().systemDefaultZoneId().build())
			.bind(RowObject::getObjAdded, RowObject::setObjAdded).setReadOnly(true);
		this.binder.forField(this.dateObjDeleted).withNullRepresentation(LocalDate.of(2020, Month.NOVEMBER, 18))
			.withConverter(ConverterBuilder.LocalDateToUtilDate().systemDefaultZoneId().build())
			.bind(RowObject::getObjDeleted, RowObject::setObjDeleted).setReadOnly(true);
		this.binder.forField(this.cmbEntity).bind(RowObject::getEntity, RowObject::setEntity).setReadOnly(true);
		this.binder.forField(this.txtObjAddedBy).withNullRepresentation("")
			.bind(RowObject::getObjAddedBy, RowObject::setObjAddedBy).setReadOnly(true);
		this.binder.forField(this.txtObjDeletedBy).withNullRepresentation("")
			.bind(RowObject::getObjDeletedBy, RowObject::setObjDeletedBy).setReadOnly(true);
		this.binder.forField(this.txtObjRowId).withNullRepresentation("")
			.withConverter(ConverterBuilder.StringToLong().numberFormatBuilder(NumberFormatBuilder.Integer()).build())
			.bind(RowObject::getObjRowId, RowObject::setObjRowId).setReadOnly(true);
		this.binder.forField(this.dateObjChanged).withNullRepresentation(LocalDate.of(2020, Month.NOVEMBER, 18))
			.withConverter(ConverterBuilder.LocalDateToUtilDate().systemDefaultZoneId().build())
			.bind(RowObject::getObjChanged, RowObject::setObjChanged).setReadOnly(true);
		this.binder.forField(this.txtObjChngcnt).withNullRepresentation("")
			.withConverter(ConverterBuilder.StringToLong().numberFormatBuilder(NumberFormatBuilder.Integer()).build())
			.bind(RowObject::getObjChngcnt, RowObject::setObjChngcnt).setReadOnly(true);
		this.binder.forField(this.txtObjChangedBy).withNullRepresentation("")
			.bind(RowObject::getObjChangedBy, RowObject::setObjChangedBy).setReadOnly(true);
		this.binder.forField(this.txtObjState).bind(RowObject::getObjState, RowObject::setObjState).setReadOnly(true);

		this.lblObjId.setSizeUndefined();
		this.lblObjId.getElement().setAttribute("slot", "label");
		this.txtObjId.setWidthFull();
		this.txtObjId.setHeight(null);
		this.formItem.add(this.lblObjId, this.txtObjId);
		this.lblObjAdded.setSizeUndefined();
		this.lblObjAdded.getElement().setAttribute("slot", "label");
		this.dateObjAdded.setWidthFull();
		this.dateObjAdded.setHeight(null);
		this.formItem12.add(this.lblObjAdded, this.dateObjAdded);
		this.lblObjDeleted.setSizeUndefined();
		this.lblObjDeleted.getElement().setAttribute("slot", "label");
		this.dateObjDeleted.setWidthFull();
		this.dateObjDeleted.setHeight(null);
		this.formItem13.add(this.lblObjDeleted, this.dateObjDeleted);
		this.lblObjChanged.setSizeUndefined();
		this.lblObjChanged.getElement().setAttribute("slot", "label");
		this.dateObjChanged.setSizeUndefined();
		this.formItem7.add(this.lblObjChanged, this.dateObjChanged);
		this.lblEntity.setSizeUndefined();
		this.lblEntity.getElement().setAttribute("slot", "label");
		this.cmbEntity.setSizeUndefined();
		this.formItem3.add(this.lblEntity, this.cmbEntity);
		this.lblObjAddedBy.setSizeUndefined();
		this.lblObjAddedBy.getElement().setAttribute("slot", "label");
		this.txtObjAddedBy.setWidthFull();
		this.txtObjAddedBy.setHeight(null);
		this.formItem4.add(this.lblObjAddedBy, this.txtObjAddedBy);
		this.lblObjDeletedBy.setSizeUndefined();
		this.lblObjDeletedBy.getElement().setAttribute("slot", "label");
		this.txtObjDeletedBy.setWidthFull();
		this.txtObjDeletedBy.setHeight(null);
		this.formItem5.add(this.lblObjDeletedBy, this.txtObjDeletedBy);
		this.lblObjChangedBy.setSizeUndefined();
		this.lblObjChangedBy.getElement().setAttribute("slot", "label");
		this.txtObjChangedBy.setSizeUndefined();
		this.formItem9.add(this.lblObjChangedBy, this.txtObjChangedBy);
		this.lblObjRowId.setSizeUndefined();
		this.lblObjRowId.getElement().setAttribute("slot", "label");
		this.txtObjRowId.setWidthFull();
		this.txtObjRowId.setHeight(null);
		this.formItem6.add(this.lblObjRowId, this.txtObjRowId);
		this.lblObjChngcnt.setSizeUndefined();
		this.lblObjChngcnt.getElement().setAttribute("slot", "label");
		this.txtObjChngcnt.setWidthFull();
		this.txtObjChngcnt.setHeight(null);
		this.formItem8.add(this.lblObjChngcnt, this.txtObjChngcnt);
		this.lblObjState.setSizeUndefined();
		this.lblObjState.getElement().setAttribute("slot", "label");
		this.txtObjState.setSizeUndefined();
		this.formItem10.add(this.lblObjState, this.txtObjState);
		this.formLayout.add(this.formItem, this.formItem12, this.formItem13, this.formItem7, this.formItem3,
			this.formItem4,
			this.formItem5, this.formItem9, this.formItem6, this.formItem8, this.formItem10);
		this.splitLayout.addToPrimary(this.formLayout);
		this.splitLayout.setSplitterPosition(50.0);
		this.splitLayout.setSizeFull();
		this.add(this.splitLayout);
		this.setFlexGrow(1.0, this.splitLayout);
		this.setSizeFull();
	} // </generated-code>

	// <generated-code name="variables">
	private FormLayout        formLayout;
	private ComboBox<State>   txtObjState;
	private SplitLayout       splitLayout;
	private DatePicker        dateObjAdded, dateObjDeleted, dateObjChanged;
	private ComboBox<Entity>  cmbEntity;
	private Label             lblObjId, lblObjAdded, lblObjDeleted, lblEntity, lblObjAddedBy, lblObjDeletedBy,
		lblObjRowId,
		lblObjChanged, lblObjChngcnt, lblObjChangedBy, lblObjState;
	private Binder<RowObject> binder;
	private TextField         txtObjId, txtObjAddedBy, txtObjDeletedBy, txtObjRowId, txtObjChngcnt, txtObjChangedBy;
	private FormItem          formItem, formItem12, formItem13, formItem3, formItem4, formItem5, formItem6, formItem7,
		formItem8, formItem9, formItem10;
	// </generated-code>

}
