
package ch.xwr.seicentobilling.ui;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import com.flowingcode.vaadin.addons.ironicons.IronIcons;
import com.rapidclipse.framework.server.resources.CaptionUtils;
import com.rapidclipse.framework.server.resources.StringResourceUtils;
import com.rapidclipse.framework.server.ui.ItemLabelGeneratorFactory;
import com.vaadin.flow.component.ClickEvent;
import com.vaadin.flow.component.ComponentEvent;
import com.vaadin.flow.component.ComponentEventListener;
import com.vaadin.flow.component.UI;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.combobox.ComboBox;
import com.vaadin.flow.component.dialog.Dialog;
import com.vaadin.flow.component.formlayout.FormLayout;
import com.vaadin.flow.component.formlayout.FormLayout.FormItem;
import com.vaadin.flow.component.html.Label;
import com.vaadin.flow.component.icon.VaadinIcon;
import com.vaadin.flow.component.orderedlayout.FlexComponent;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.component.textfield.TextField;
import com.vaadin.flow.data.binder.BeanValidationBinder;

import ch.xwr.seicentobilling.business.LovState;
import ch.xwr.seicentobilling.business.LovState.State;
import ch.xwr.seicentobilling.business.LovState.ValueType;
import ch.xwr.seicentobilling.business.RowObjectManager;
import ch.xwr.seicentobilling.business.helper.SeicentoCrud;
import ch.xwr.seicentobilling.dal.RowObjectDAO;
import ch.xwr.seicentobilling.dal.RowParameterDAO;
import ch.xwr.seicentobilling.entities.RowObject;
import ch.xwr.seicentobilling.entities.RowParameter;


public class RowParamPopup extends VerticalLayout
{
	/** Logger initialized */
	private static final Logger LOG = LoggerFactory.getLogger(RowParamPopup.class);
	
	/**
	 *
	 */
	public RowParamPopup()
	{
		super();
		this.initUI();

		// this.setHeight(Seicento.calculateThemeHeight(Float.parseFloat(this.getHeight()), Lumo.DARK));
		
		// State
		this.comboBoxState.setItems(LovState.State.values());
		
		this.cbxValueType.setItems(LovState.ValueType.values());
		
		// get Parameter
		final Long   beanId = (Long)UI.getCurrent().getSession().getAttribute("beanId");
		final Long   objId  = (Long)UI.getCurrent().getSession().getAttribute("objId");
		RowParameter bean   = null;
		RowObject    obj    = null;

		if(beanId == null)
		{
			// new
			final RowObjectDAO objDao = new RowObjectDAO();
			obj = objDao.find(objId);

			bean = new RowParameter();
			bean.setPrmState(LovState.State.active);
			// bean.setLanguage(lng);
			bean.setRowObject(obj);

		}
		else
		{
			final RowParameterDAO dao = new RowParameterDAO();
			bean = dao.find(beanId.longValue());
		}

		this.binder.setBean(bean);
	}
	
	public static Dialog getPopupWindow()
	{
		final Dialog win = new Dialog();
		win.setModal(true);
		win.setResizable(true);
		final Button cancelButton = new Button("", e -> {
			win.close();
		});
		cancelButton.setIcon(VaadinIcon.CLOSE.create());
		cancelButton.getStyle().set("float", "right");
		win.add(cancelButton, new RowParamPopup());
		return win;
	}
	
	/**
	 * Event handler delegate method for the {@link Button} {@link #cmdSave}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdSave_onClick(final ClickEvent<Button> event)
	{
		if(SeicentoCrud.doSave(this.binder, new RowParameterDAO()))
		{
			try
			{
				
				final RowObjectManager man = new RowObjectManager();
				man.updateObject(this.binder.getBean().getPrmId(),
					this.binder.getBean().getClass().getSimpleName());

				UI.getCurrent().getSession().setAttribute(String.class, "cmdSave");
				UI.getCurrent().getSession().setAttribute("beanId",
					this.binder.getBean().getPrmId());

				((Dialog)this.getParent().get()).close();
				// Notification.show("Daten wurden gespeichert", 5000, Notification.Position.BOTTOM_END);
			}
			catch(final Exception e)
			{
				RowParamPopup.LOG.error("could not save ObjRoot", e);
			}
		}
		
	}

	/**
	 * Event handler delegate method for the {@link Button} {@link #cmdReset}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdReset_onClick(final ClickEvent<Button> event)
	{
		UI.getCurrent().getSession().setAttribute(String.class, "cmdCancel");
		this.binder.removeBean();
		((Dialog)this.getParent().get()).close();
	}
	
	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.verticalLayout    = new VerticalLayout();
		this.horizontalLayout  = new HorizontalLayout();
		this.formLayout        = new FormLayout();
		this.formItem          = new FormItem();
		this.lblPrmGroup       = new Label();
		this.txtPrmGroup       = new TextField();
		this.formItem2         = new FormItem();
		this.lblPrmSubGroup    = new Label();
		this.txtPrmSubGroup    = new TextField();
		this.formItem3         = new FormItem();
		this.lblPrmKey         = new Label();
		this.txtPrmKey         = new TextField();
		this.formItem4         = new FormItem();
		this.lblPrmValue       = new Label();
		this.txtPrmValue       = new TextField();
		this.formItem5         = new FormItem();
		this.lblPrmValueType   = new Label();
		this.cbxValueType      = new ComboBox<>();
		this.formItem6         = new FormItem();
		this.lblPrmState       = new Label();
		this.comboBoxState     = new ComboBox<>();
		this.horizontalLayout2 = new HorizontalLayout();
		this.cmdSave           = new Button();
		this.cmdReset          = new Button();
		this.binder            = new BeanValidationBinder<>(RowParameter.class);
		
		this.verticalLayout.setPadding(false);
		this.formLayout.setResponsiveSteps(
			new FormLayout.ResponsiveStep("0px", 1, FormLayout.ResponsiveStep.LabelsPosition.TOP),
			new FormLayout.ResponsiveStep("500px", 1, FormLayout.ResponsiveStep.LabelsPosition.ASIDE),
			new FormLayout.ResponsiveStep("1000px", 1, FormLayout.ResponsiveStep.LabelsPosition.ASIDE));
		this.lblPrmGroup.setText(StringResourceUtils.optLocalizeString("{$lblPrmGroup.value}", this));
		this.lblPrmSubGroup.setText(StringResourceUtils.optLocalizeString("{$lblPrmSubGroup.value}", this));
		this.lblPrmKey.setText(StringResourceUtils.optLocalizeString("{$lblPrmKey.value}", this));
		this.lblPrmValue.setText(StringResourceUtils.optLocalizeString("{$lblPrmValue.value}", this));
		this.lblPrmValueType.setText(StringResourceUtils.optLocalizeString("{$lblPrmValueType.value}", this));
		this.cbxValueType.setItemLabelGenerator(ItemLabelGeneratorFactory.NonNull(CaptionUtils::resolveCaption));
		this.lblPrmState.setText(StringResourceUtils.optLocalizeString("{$lblPrmState.value}", this));
		this.comboBoxState.setItemLabelGenerator(ItemLabelGeneratorFactory.NonNull(CaptionUtils::resolveCaption));
		this.horizontalLayout2.setJustifyContentMode(FlexComponent.JustifyContentMode.CENTER);
		this.horizontalLayout2.setAlignItems(FlexComponent.Alignment.CENTER);
		this.cmdSave.setText("Speichern");
		this.cmdSave.setIcon(IronIcons.SAVE.create());
		this.cmdReset.setText("Schliessen");
		this.cmdReset.setIcon(IronIcons.CANCEL.create());
		
		this.binder.forField(this.txtPrmGroup).withNullRepresentation("").bind("prmGroup");
		this.binder.forField(this.txtPrmSubGroup).withNullRepresentation("").bind("prmSubGroup");
		this.binder.forField(this.txtPrmKey).withNullRepresentation("").bind("prmKey");
		this.binder.forField(this.txtPrmValue).withNullRepresentation("").bind("prmValue");
		this.binder.forField(this.cbxValueType).bind("prmValueType");
		this.binder.forField(this.comboBoxState).bind("prmState");
		
		this.lblPrmGroup.setSizeUndefined();
		this.lblPrmGroup.getElement().setAttribute("slot", "label");
		this.txtPrmGroup.setWidthFull();
		this.txtPrmGroup.setHeight(null);
		this.formItem.add(this.lblPrmGroup, this.txtPrmGroup);
		this.lblPrmSubGroup.setSizeUndefined();
		this.lblPrmSubGroup.getElement().setAttribute("slot", "label");
		this.txtPrmSubGroup.setWidthFull();
		this.txtPrmSubGroup.setHeight(null);
		this.formItem2.add(this.lblPrmSubGroup, this.txtPrmSubGroup);
		this.lblPrmKey.setSizeUndefined();
		this.lblPrmKey.getElement().setAttribute("slot", "label");
		this.txtPrmKey.setWidthFull();
		this.txtPrmKey.setHeight(null);
		this.formItem3.add(this.lblPrmKey, this.txtPrmKey);
		this.lblPrmValue.setSizeUndefined();
		this.lblPrmValue.getElement().setAttribute("slot", "label");
		this.txtPrmValue.setWidthFull();
		this.txtPrmValue.setHeight(null);
		this.formItem4.add(this.lblPrmValue, this.txtPrmValue);
		this.lblPrmValueType.setSizeUndefined();
		this.lblPrmValueType.getElement().setAttribute("slot", "label");
		this.cbxValueType.setWidthFull();
		this.cbxValueType.setHeight(null);
		this.formItem5.add(this.lblPrmValueType, this.cbxValueType);
		this.lblPrmState.setSizeUndefined();
		this.lblPrmState.getElement().setAttribute("slot", "label");
		this.comboBoxState.setWidthFull();
		this.comboBoxState.setHeight(null);
		this.formItem6.add(this.lblPrmState, this.comboBoxState);
		this.formLayout.add(this.formItem, this.formItem2, this.formItem3, this.formItem4, this.formItem5,
			this.formItem6);
		this.cmdSave.setWidth("125px");
		this.cmdSave.setHeight(null);
		this.cmdReset.setWidth("135px");
		this.cmdReset.setHeight(null);
		this.horizontalLayout2.add(this.cmdSave, this.cmdReset);
		this.horizontalLayout2.setVerticalComponentAlignment(FlexComponent.Alignment.STRETCH, this.cmdSave);
		this.horizontalLayout2.setVerticalComponentAlignment(FlexComponent.Alignment.STRETCH, this.cmdReset);
		this.horizontalLayout.setWidthFull();
		this.horizontalLayout.setHeight("30px");
		this.formLayout.setSizeFull();
		this.horizontalLayout2.setWidthFull();
		this.horizontalLayout2.setHeight("12%");
		this.verticalLayout.add(this.horizontalLayout, this.formLayout, this.horizontalLayout2);
		this.verticalLayout.setSizeFull();
		this.add(this.verticalLayout);
		this.setWidth("700px");
		this.setHeight("440px");
		
		this.cmdSave.addClickListener(this::cmdSave_onClick);
		this.cmdReset.addClickListener(this::cmdReset_onClick);
	} // </generated-code>

	// <generated-code name="variables">
	private FormLayout                         formLayout;
	private Button                             cmdSave, cmdReset;
	private ComboBox<State>                    comboBoxState;
	private ComboBox<ValueType>                cbxValueType;
	private BeanValidationBinder<RowParameter> binder;
	private VerticalLayout                     verticalLayout;
	private HorizontalLayout                   horizontalLayout, horizontalLayout2;
	private Label                              lblPrmGroup, lblPrmSubGroup, lblPrmKey, lblPrmValue, lblPrmValueType,
		lblPrmState;
	private TextField                          txtPrmGroup, txtPrmSubGroup, txtPrmKey, txtPrmValue;
	private FormItem                           formItem, formItem2, formItem3, formItem4, formItem5, formItem6;
	// </generated-code>

}
