
package ch.xwr.seicentobilling.ui.crm;

import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;

import org.jfree.util.Log;

import com.rapidclipse.framework.server.data.renderer.RenderedComponent;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.html.Anchor;
import com.vaadin.flow.component.html.Image;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;

import ch.xwr.seicentobilling.entities.Address;


public class FunctionAddressHyperlink extends HorizontalLayout implements RenderedComponent<Address>
{
	
	/**
	 *
	 */
	public FunctionAddressHyperlink()
	{
		super();
		this.initUI();

		final Anchor anchorNew =
			new Anchor("");
		anchorNew.setTitle("Link to Google Maps");
		final Button linkMaps = new Button();
		linkMaps.setIcon(new Image("images/gmaps32.PNG", ""));
		linkMaps.addClassName("pointer");
		anchorNew.add(linkMaps);
		this.replace(this.anchor, anchorNew);
		this.anchor = anchorNew;
	}
	
	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.anchor = new Anchor();
		
		this.setSpacing(false);
		this.anchor.setText("Link");
		
		this.anchor.setSizeUndefined();
		this.add(this.anchor);
		this.setSizeUndefined();
	} // </generated-code>
	
	@Override
	public void renderComponent(final Address value)
	{
		final String link = this.getGoogleLink(value);
		this.anchor.setHref(link);
		this.anchor.setTarget("_blank");
		
	}
	
	private String getGoogleLink(final Address adr)
	{
		final String uripre = "https://www.google.com/maps/search/?api=1&query=";
		String       q      = adr.getAdrCity();
		if(adr.getAdrLine0() != null && !adr.getAdrLine0().trim().isEmpty())
		{
			q = q + ", " + adr.getAdrLine0();
		}
		if(adr.getCustomer().getCusCompany() != null && !adr.getCustomer().getCusCompany().trim().isEmpty())
		{
			q = q + ", " + adr.getCustomer().getCusCompany();
		}

		try
		{
			if(q != null)
			{
				q = URLEncoder.encode(q, "UTF-8");
			}
			else
			{
				q = "";
			}
		}
		catch(final UnsupportedEncodingException e)
		{
			Log.error(e);
		}
		return uripre + q;
	}

	// <generated-code name="variables">
	private Anchor anchor;
	// </generated-code>

}
