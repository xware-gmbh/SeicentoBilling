
package ch.xwr.seicentobilling.ui.crm;

import java.net.MalformedURLException;
import java.net.URL;

import org.jfree.util.Log;

import com.flowingcode.vaadin.addons.ironicons.CommunicationIcons;
import com.rapidclipse.framework.server.data.renderer.RenderedComponent;
import com.vaadin.flow.component.html.Anchor;
import com.vaadin.flow.component.icon.IronIcon;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;

import ch.xwr.seicentobilling.business.LovCrm;
import ch.xwr.seicentobilling.entities.CustomerLink;


public class FunctionLinkHyperlink extends HorizontalLayout implements RenderedComponent<CustomerLink>
{

	/**
	 *
	 */
	public FunctionLinkHyperlink()
	{
		super();
		this.initUI();
		
	}

	@Override
	public void renderComponent(final CustomerLink value)
	{
		this.link.setTitle(value.getCnkLink());
		this.setIcon(value);
		
		final String link = this.getUrlLink(value);
		
		this.link.setHref(link);
		
	}
	
	private String getUrlLink(final CustomerLink act)
	{
		String url = "";

		if(act.getCnkType() == LovCrm.LinkType.phone)
		{
			url = this.getTelLink(act);
		}
		else if(act.getCnkType() == LovCrm.LinkType.mail)
		{
			url = this.getMailLink(act);
		}
		else
		{
			url = this.getWebLink(act.getCnkLink());
		}

		return url;
	}
	
	private String getWebLink(String cnkLink)
	{
		try
		{
			final URL myUrl = new URL(cnkLink);
			return myUrl.toString();
		}
		catch(final MalformedURLException e)
		{
			Log.error(e);
		}
		
		cnkLink = "https://" + cnkLink;
		return cnkLink;
	}
	
	private String getTelLink(final CustomerLink act)
	{
		// f√ºr tel: gibt es ein ProtocolExtender.jar welches im java bzw. docker build ist.
		if(!act.getCnkLink().isEmpty())
		{
			final String st = act.getCnkLink().replaceAll("\\s+", "");
			return "tel:" + st;
		}
		return "";
	}
	
	private String getMailLink(final CustomerLink act)
	{
		if(!act.getCnkLink().isEmpty())
		{
			final String st = act.getCnkLink().replaceAll("\\s+", "");
			return "mailto:" + st;
		}
		return "";
	}
	
	private void setIcon(final CustomerLink bean)
	{
		if(bean.getCnkLink() != null)
		{
			if(bean.getCnkLink().isEmpty())
			{
				this.link.setEnabled(false);
			}

			if(bean.getCnkType() == LovCrm.LinkType.phone)
			{
				this.replace(this.ironIcon, CommunicationIcons.PHONE.create());
			}

		}
		else
		{
			this.link.setEnabled(false);
		}
	}

	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.ironIcon = CommunicationIcons.MAIL_OUTLINE.create();
		this.link     = new Anchor();
		
		this.setSpacing(false);
		this.link.setText("Link");
		
		this.link.setSizeUndefined();
		this.add(this.ironIcon, this.link);
		this.setSizeUndefined();
	} // </generated-code>

	// <generated-code name="variables">
	private IronIcon ironIcon;
	private Anchor   link;
	// </generated-code>
	
}
