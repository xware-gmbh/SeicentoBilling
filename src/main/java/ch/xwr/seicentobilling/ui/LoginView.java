
package ch.xwr.seicentobilling.ui;

import com.rapidclipse.framework.security.authentication.CredentialsUsernamePassword;
import com.rapidclipse.framework.server.security.authentication.Authentication;
import com.vaadin.flow.component.ClickEvent;
import com.vaadin.flow.component.ComponentEvent;
import com.vaadin.flow.component.ComponentEventListener;
import com.vaadin.flow.component.button.Button;
import com.vaadin.flow.component.formlayout.FormLayout;
import com.vaadin.flow.component.html.H3;
import com.vaadin.flow.component.notification.Notification;
import com.vaadin.flow.component.orderedlayout.FlexComponent;
import com.vaadin.flow.component.orderedlayout.HorizontalLayout;
import com.vaadin.flow.component.orderedlayout.VerticalLayout;
import com.vaadin.flow.component.textfield.PasswordField;
import com.vaadin.flow.component.textfield.TextField;
import com.vaadin.flow.router.Route;

import ch.xwr.seicentobilling.MyAuthenticationProvider;


@Route("login")
@com.rapidclipse.framework.server.security.authentication.LoginView
public class LoginView extends VerticalLayout
{
	public LoginView()
	{
		super();
		this.initUI();
	}

	/**
	 * Event handler delegate method for the {@link Button} {@link #cmdLogin}.
	 *
	 * @see ComponentEventListener#onComponentEvent(ComponentEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdLogin_onClick(final ClickEvent<Button> event)
	{
		final CredentialsUsernamePassword credentials = CredentialsUsernamePassword.New(
			this.txtUsername.getValue(), this.txtPassword.getValue());

		final MyAuthenticationProvider authenticatorProvider = MyAuthenticationProvider.getInstance();

		if(Authentication.tryLogin(credentials, authenticatorProvider))
		{
		}
		else
		{
			Notification.show("Invalid username/password");
		}
	}

	/* WARNING: Do NOT edit!<br>The content of this method is always regenerated by the UI designer. */
	// <generated-code name="initUI">
	private void initUI()
	{
		this.verticalLayout   = new VerticalLayout();
		this.formLayout       = new FormLayout();
		this.h3               = new H3();
		this.txtUsername      = new TextField();
		this.txtPassword      = new PasswordField();
		this.horizontalLayout = new HorizontalLayout();
		this.cmdLogin         = new Button();

		this.setJustifyContentMode(FlexComponent.JustifyContentMode.CENTER);
		this.setAlignItems(FlexComponent.Alignment.CENTER);
		this.setDefaultHorizontalComponentAlignment(FlexComponent.Alignment.CENTER);
		this.h3.setText("Login");
		this.txtUsername.setValue("admin");
		this.txtUsername.setLabel("Username");
		this.txtPassword.setValue("changeme");
		this.txtPassword.setLabel("Password");
		this.horizontalLayout.setDefaultVerticalComponentAlignment(FlexComponent.Alignment.BASELINE);
		this.cmdLogin.setText("Login");

		this.h3.setSizeUndefined();
		this.txtUsername.setSizeUndefined();
		this.txtPassword.setSizeUndefined();
		this.formLayout.add(this.h3, this.txtUsername, this.txtPassword);
		this.cmdLogin.setSizeUndefined();
		this.horizontalLayout.add(this.cmdLogin);
		this.formLayout.setSizeUndefined();
		this.horizontalLayout.setSizeUndefined();
		this.verticalLayout.add(this.formLayout, this.horizontalLayout);
		this.verticalLayout.setSizeUndefined();
		this.add(this.verticalLayout);
		this.setSizeFull();

		this.cmdLogin.addClickListener(this::cmdLogin_onClick);
	} // </generated-code>

	// <generated-code name="variables">
	private FormLayout       formLayout;
	private Button           cmdLogin;
	private VerticalLayout   verticalLayout;
	private PasswordField    txtPassword;
	private HorizontalLayout horizontalLayout;
	private H3               h3;
	private TextField        txtUsername;
	// </generated-code>

}
