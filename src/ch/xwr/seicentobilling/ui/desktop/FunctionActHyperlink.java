
package ch.xwr.seicentobilling.ui.desktop;

import java.net.MalformedURLException;
import java.net.URL;

import org.jfree.util.Log;

import com.vaadin.event.LayoutEvents.LayoutClickEvent;
import com.vaadin.event.LayoutEvents.LayoutClickListener;
import com.vaadin.server.ExternalResource;
import com.vaadin.server.FontAwesome;
import com.vaadin.shared.ui.MarginInfo;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Table;
import com.vaadin.ui.Table.ColumnGenerator;
import com.xdev.ui.XdevHorizontalLayout;
import com.xdev.ui.XdevLink;
import com.xdev.ui.entitycomponent.table.XdevTable;

import ch.xwr.seicentobilling.entities.Activity;

public class FunctionActHyperlink extends XdevHorizontalLayout {

	public static class Generator implements ColumnGenerator {
		@Override
		public Object generateCell(final Table table, final Object itemId, final Object columnId) {

			return new FunctionActHyperlink(table, itemId, columnId);
		}
	}

	private final Table customizedTable;
	private final Object itemId;
	private final Object columnId;

	private FunctionActHyperlink(final Table customizedTable, final Object itemId, final Object columnId) {
		super();

		this.customizedTable = customizedTable;
		this.itemId = itemId;
		this.columnId = columnId;

		this.initUI();

		if (this.getBean().getActLink() != null) {
			final String link = getWebLink(this.getBean().getActLink());
			this.link.setDescription(link);
			if (this.getBean().getActLink().isEmpty()) {
				this.link.setEnabled(false);
			}
			try {
				this.link.setResource(new ExternalResource(new URL(link)));
			} catch (final MalformedURLException e) {
				Log.error(e);
			}

		} else {
			this.link.setEnabled(false);
		}


		//Downloader init
//		final Resource res = getInputStream();
//		final FileDownloader fd = new FileDownloader(res);
//		fd.extend(this.btnHyperlink);
	}

	private String getWebLink(String cnkLink) {
		try {
			final URL myUrl = new URL(cnkLink);
			return myUrl.toString();
		} catch (final MalformedURLException e) {
			Log.error(e);
		}

		cnkLink = "https://" + cnkLink;
		return cnkLink;
	}


	public Table getTable() {
		return this.customizedTable;
	}

	public Object getItemId() {
		return this.itemId;
	}

	public Object getColumnId() {
		return this.columnId;
	}

	@SuppressWarnings("unchecked")
	public Activity getBean() {
		return ((XdevTable<Activity>) getTable()).getBeanContainerDataSource().getItem(getItemId()).getBean();
	}

//	private void launchLink() {
//		final Activity act = getBean();
//		final String url = act.getActLink();
//
//		try {
//	        if (Desktop.isDesktopSupported()) {
//	            // Windows
//	            Desktop.getDesktop().browse(new URI(url));
//	        } else {
//	            // Ubuntu
//	            final Runtime runtime = Runtime.getRuntime();
//	            runtime.exec("/usr/bin/firefox -new-window " + url);
//	        }
//
//		} catch (final Exception e) {
//
//		}
//	}

	/**
	 * Event handler delegate method for the {@link XdevHorizontalLayout}.
	 *
	 * @see LayoutClickListener#layoutClick(LayoutClickEvent)
	 * @eventHandlerDelegate
	 */
	private void this_layoutClick(final LayoutClickEvent event) {
		selectItem();
	}

	private void selectItem() {
		getTable().select(getItemId());
	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.link = new XdevLink();

		this.setSpacing(false);
		this.setMargin(new MarginInfo(false));
		this.link.setTargetName("_blank");
		this.link.setIcon(FontAwesome.BOLT);
		this.link.setCaption("Link");

		this.link.setSizeUndefined();
		this.addComponent(this.link);
		this.setComponentAlignment(this.link, Alignment.MIDDLE_CENTER);
		this.setSizeUndefined();

		this.addLayoutClickListener(event -> this.this_layoutClick(event));
	} // </generated-code>

	// <generated-code name="variables">
	private XdevLink link;
	// </generated-code>


}
