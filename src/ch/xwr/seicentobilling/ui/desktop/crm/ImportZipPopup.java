package ch.xwr.seicentobilling.ui.desktop.crm;

import java.io.File;

import com.vaadin.event.ShortcutAction;
import com.vaadin.external.org.slf4j.Logger;
import com.vaadin.external.org.slf4j.LoggerFactory;
import com.vaadin.server.ExternalResource;
import com.vaadin.server.FontAwesome;
import com.vaadin.shared.ui.MarginInfo;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.Notification;
import com.vaadin.ui.Notification.Type;
import com.vaadin.ui.Upload;
import com.vaadin.ui.Upload.SucceededEvent;
import com.vaadin.ui.Window;
import com.xdev.res.ApplicationResource;
import com.xdev.ui.XdevButton;
import com.xdev.ui.XdevHorizontalLayout;
import com.xdev.ui.XdevImage;
import com.xdev.ui.XdevLabel;
import com.xdev.ui.XdevLink;
import com.xdev.ui.XdevUpload;
import com.xdev.ui.XdevVerticalLayout;
import com.xdev.ui.XdevView;

import ch.xwr.seicentobilling.business.UploadReceiverExcel;
import ch.xwr.seicentobilling.business.crm.ZipImporter;
import ch.xwr.seicentobilling.ui.desktop.ExcelUploadPopup;

public class ImportZipPopup extends XdevView {
	/** Logger initialized */
	private static final Logger LOG = LoggerFactory.getLogger(ExcelUploadPopup.class);

	/**
	 *
	 */
	public ImportZipPopup() {
		super();
		this.initUI();

		setupUploader();

		this.labelStatus.setValue("");

	}

	public static Window getPopupWindow() {
		final Window win = new Window();

		win.setWidth("600");
		win.setHeight("260");
		win.center();
		win.setModal(true);
		win.setContent(new ImportZipPopup());

		return win;
	}

	private void setupUploader() {
		//uploader
		final UploadReceiverExcel rec = new UploadReceiverExcel();
		this.upload.setReceiver(rec);

        this.upload.addSucceededListener(new Upload.SucceededListener() {
            @Override
			public void uploadSucceeded(final SucceededEvent event) {
                // This method gets called when the upload finished successfully
        	    //System.out.println("________________ UPLOAD SUCCEEDED y");
        	    rec.uploadSucceeded(event);
        		Notification.show("Datei erfolgreich hochgeladen", Type.TRAY_NOTIFICATION);
        		LOG.info("Excel Datei hochgeladen " + event.getFilename());

        	    processUploadedFile(rec.getOutFile());
            }

        });
	}

	private void processUploadedFile(final File outFile) {
		try {
			final ZipImporter imp = new ZipImporter();
			imp.readFile(outFile);

			Notification.show("Excel Datei importiert", Type.TRAY_NOTIFICATION);
			LOG.info("Excel Datei erfolgreich importiert");

			this.upload.setEnabled(false);
			this.labelStatus.setValue("Daten erfolgreich importiert/aktualisiert");

		} catch (final Exception e) {
			this.labelStatus.setValue("Importieren ist fehlgeschlagen!");
			Notification.show("Fehler beim Importieren", e.getMessage(), Notification.Type.ERROR_MESSAGE);
			LOG.error(e.getLocalizedMessage());
		} finally {
			//cleanup
			outFile.delete();
		}

	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #cmdClose}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdClose_buttonClick(final Button.ClickEvent event) {
		((Window) this.getParent()).close();
	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.verticalLayout = new XdevVerticalLayout();
		this.horizontalLayoutTitle = new XdevHorizontalLayout();
		this.image = new XdevImage();
		this.label = new XdevLabel();
		this.horizontalLayout2 = new XdevHorizontalLayout();
		this.label2 = new XdevLabel();
		this.link = new XdevLink();
		this.horizontalLayoutUpload = new XdevHorizontalLayout();
		this.upload = new XdevUpload();
		this.cmdClose = new XdevButton();
		this.horizontalLayoutFooteer = new XdevHorizontalLayout();
		this.labelStatus = new XdevLabel();

		this.verticalLayout.setMargin(new MarginInfo(false, true, true, true));
		this.horizontalLayoutTitle.setSpacing(false);
		this.horizontalLayoutTitle.setMargin(new MarginInfo(false, true, false, true));
		this.image.setSource(new ApplicationResource(this.getClass(), "WebContent/WEB-INF/resources/images/excel24.png"));
		this.label.setStyleName("h3");
		this.label.setValue("Excel csv Datei hochladen");
		this.horizontalLayout2.setMargin(new MarginInfo(false, true, false, true));
		this.label2.setDescription("Die Zahl entspricht dem Monat (z.B. 9 = September)");
		this.label2.setValue("Plz Verzeichnis");
		this.link.setTargetName("_blank");
		this.link.setCaption("Link Opendata");
		this.link.setResource(new ExternalResource("https://opendata.swiss/de/dataset/plz_verzeichnis"));
		this.upload.setButtonCaption("Start Prozess");
		this.cmdClose.setIcon(FontAwesome.CLOSE);
		this.cmdClose.setCaption("Schliessen");
		this.cmdClose.setClickShortcut(ShortcutAction.KeyCode.ESCAPE);
		this.horizontalLayoutFooteer.setMargin(new MarginInfo(false, true, false, true));
		this.labelStatus.setValue("Label");

		this.image.setWidth(100, Unit.PIXELS);
		this.image.setHeight(100, Unit.PIXELS);
		this.horizontalLayoutTitle.addComponent(this.image);
		this.horizontalLayoutTitle.setComponentAlignment(this.image, Alignment.MIDDLE_LEFT);
		this.horizontalLayoutTitle.setExpandRatio(this.image, 10.0F);
		this.label.setSizeUndefined();
		this.horizontalLayoutTitle.addComponent(this.label);
		this.horizontalLayoutTitle.setExpandRatio(this.label, 40.0F);
		this.label2.setSizeUndefined();
		this.horizontalLayout2.addComponent(this.label2);
		this.horizontalLayout2.setExpandRatio(this.label2, 10.0F);
		this.link.setSizeUndefined();
		this.horizontalLayout2.addComponent(this.link);
		this.horizontalLayout2.setExpandRatio(this.link, 20.0F);
		this.upload.setWidth(100, Unit.PERCENTAGE);
		this.upload.setHeight(-1, Unit.PIXELS);
		this.horizontalLayoutUpload.addComponent(this.upload);
		this.horizontalLayoutUpload.setExpandRatio(this.upload, 10.0F);
		this.cmdClose.setSizeUndefined();
		this.horizontalLayoutUpload.addComponent(this.cmdClose);
		this.horizontalLayoutUpload.setExpandRatio(this.cmdClose, 10.0F);
		this.labelStatus.setWidth(100, Unit.PERCENTAGE);
		this.labelStatus.setHeight(-1, Unit.PIXELS);
		this.horizontalLayoutFooteer.addComponent(this.labelStatus);
		this.horizontalLayoutFooteer.setExpandRatio(this.labelStatus, 10.0F);
		this.horizontalLayoutTitle.setWidth(100, Unit.PERCENTAGE);
		this.horizontalLayoutTitle.setHeight(-1, Unit.PIXELS);
		this.verticalLayout.addComponent(this.horizontalLayoutTitle);
		this.horizontalLayout2.setWidth(100, Unit.PERCENTAGE);
		this.horizontalLayout2.setHeight(-1, Unit.PIXELS);
		this.verticalLayout.addComponent(this.horizontalLayout2);
		this.horizontalLayoutUpload.setWidth(100, Unit.PERCENTAGE);
		this.horizontalLayoutUpload.setHeight(-1, Unit.PIXELS);
		this.verticalLayout.addComponent(this.horizontalLayoutUpload);
		this.verticalLayout.setExpandRatio(this.horizontalLayoutUpload, 10.0F);
		this.horizontalLayoutFooteer.setWidth(100, Unit.PERCENTAGE);
		this.horizontalLayoutFooteer.setHeight(-1, Unit.PIXELS);
		this.verticalLayout.addComponent(this.horizontalLayoutFooteer);
		this.verticalLayout.setComponentAlignment(this.horizontalLayoutFooteer, Alignment.MIDDLE_CENTER);
		this.verticalLayout.setExpandRatio(this.horizontalLayoutFooteer, 10.0F);
		this.verticalLayout.setWidth(100, Unit.PERCENTAGE);
		this.verticalLayout.setHeight(-1, Unit.PIXELS);
		this.setContent(this.verticalLayout);
		this.setSizeFull();

		this.cmdClose.addClickListener(event -> this.cmdClose_buttonClick(event));
	} // </generated-code>

	// <generated-code name="variables">
	private XdevLabel label, label2, labelStatus;
	private XdevButton cmdClose;
	private XdevUpload upload;
	private XdevHorizontalLayout horizontalLayoutTitle, horizontalLayout2, horizontalLayoutUpload, horizontalLayoutFooteer;
	private XdevImage image;
	private XdevLink link;
	private XdevVerticalLayout verticalLayout;
	// </generated-code>

}
