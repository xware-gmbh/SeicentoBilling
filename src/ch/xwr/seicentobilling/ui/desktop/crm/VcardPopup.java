package ch.xwr.seicentobilling.ui.desktop.crm;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;

import com.vaadin.event.ShortcutAction;
import com.vaadin.server.FileDownloader;
import com.vaadin.server.FontAwesome;
import com.vaadin.server.Resource;
import com.vaadin.server.StreamResource;
import com.vaadin.shared.ui.MarginInfo;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Button;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.UI;
import com.vaadin.ui.Window;
import com.xdev.ui.XdevButton;
import com.xdev.ui.XdevGridLayout;
import com.xdev.ui.XdevHorizontalLayout;
import com.xdev.ui.XdevLabel;
import com.xdev.ui.XdevPanel;
import com.xdev.ui.XdevTextArea;
import com.xdev.ui.XdevVerticalLayout;
import com.xdev.ui.XdevView;

import ch.xwr.seicentobilling.business.Seicento;
import ch.xwr.seicentobilling.business.crm.VcardHandler;
import ch.xwr.seicentobilling.dal.CustomerDAO;
import ch.xwr.seicentobilling.entities.Customer;

public class VcardPopup extends XdevView {
	Customer bean = null;
	private VcardHandler vcard = null;;

	/**
	 *
	 */
	public VcardPopup() {
		super();
		this.initUI();

		this.setHeight(Seicento.calculateThemeHeight(this.getHeight(),UI.getCurrent().getTheme()));

		// get Parameter
		final Long beanId = (Long) UI.getCurrent().getSession().getAttribute("cusbeanId");
		if (beanId != null) {
			final CustomerDAO dao = new CustomerDAO();
			this.bean = dao.find(beanId.longValue());
		} else {
			//close/disable
			this.cmdCreate.setEnabled(false);
		}

		this.lblFileName.setValue("");
	}

	public static Window getPopupWindow() {
		final Window win = new Window();

		win.center();
		win.setModal(true);
		win.setContent(new VcardPopup());

		return win;
	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #cmdCancel}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdCancel_buttonClick(final Button.ClickEvent event) {
		((Window) this.getParent()).close();
	}

	/**
	 * Event handler delegate method for the {@link XdevButton} {@link #cmdCreate}.
	 *
	 * @see Button.ClickListener#buttonClick(Button.ClickEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void cmdCreate_buttonClick(final Button.ClickEvent event) {
		this.vcard  = new VcardHandler(this.bean, ".vcf");
		this.vcard.generateVcard();
		final Resource res = getInputStream(this.vcard.getFile());

		final Button cmdDown = getDownButton();
		final FileDownloader fd = new FileDownloader(res);
		fd.extend(cmdDown);

		this.horizontalLayout.replaceComponent(this.cmdDownload, cmdDown);
		this.lblFileName.setValue(this.vcard.getFile().getAbsoluteFile().getName());
	}

	private Resource getInputStream(final File fiv) {

		final StreamResource.StreamSource source = new StreamResource.StreamSource() {

			@Override
			public InputStream getStream() {
				FileInputStream inStream = null;
				try {
					inStream = new FileInputStream(fiv);
				} catch (final FileNotFoundException e) {
					e.printStackTrace();
				}
				return inStream;
			}
		};

		final StreamResource newResource = new StreamResource(source, this.vcard.getFile().getName());
		newResource.setMIMEType("text/vcard");
		final Resource res = newResource;

		return res;
	}

	private Button getDownButton() {
		final Button down = new Button("Download", FontAwesome.DOWNLOAD);
		down.setDisableOnClick(true);

		return down;
	}

	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.panel = new XdevPanel();
		this.verticalLayout = new XdevVerticalLayout();
		this.horizontalLayout2 = new XdevHorizontalLayout();
		this.textArea = new XdevTextArea();
		this.horizontalLayoutUpload = new XdevHorizontalLayout();
		this.gridLayout = new XdevGridLayout();
		this.label3 = new XdevLabel();
		this.lblFileName = new XdevLabel();
		this.horizontalLayout = new XdevHorizontalLayout();
		this.cmdCreate = new XdevButton();
		this.cmdDownload = new XdevButton();
		this.label2 = new XdevLabel();
		this.cmdCancel = new XdevButton();

		this.panel.setIcon(FontAwesome.FILE_TEXT_O);
		this.panel.setCaption("Vcard erstellen");
		this.panel.setTabIndex(0);
		this.verticalLayout.setMargin(new MarginInfo(false, true, true, true));
		this.horizontalLayout2.setCaption("");
		this.horizontalLayout2.setMargin(new MarginInfo(false));
		this.textArea.setValue(
				"Die Funktion ermÃ¶glicht das Erstellen einer elektronischen Visitenkarte (vcard) des aktuellen Kontakts. Die erstellte Datei kann in verschiedenen Programmen (Mobile, Outlook etc.) importiert werden.");
		this.textArea.setReadOnly(true);
		this.textArea.setRows(4);
		this.horizontalLayoutUpload.setMargin(new MarginInfo(false));
		this.gridLayout.setMargin(new MarginInfo(false));
		this.label3.setValue("Datei");
		this.lblFileName.setValue("Label");
		this.horizontalLayout.setMargin(new MarginInfo(false));
		this.cmdCreate.setIcon(FontAwesome.FILE_TEXT_O);
		this.cmdCreate.setCaption("Erstellen");
		this.cmdCreate.setDisableOnClick(true);
		this.cmdDownload.setIcon(FontAwesome.DOWNLOAD);
		this.cmdDownload.setCaption("Download");
		this.cmdDownload.setEnabled(false);
		this.cmdDownload.setDisableOnClick(true);
		this.cmdCancel.setIcon(FontAwesome.CLOSE);
		this.cmdCancel.setCaption("Schliessen");
		this.cmdCancel.setClickShortcut(ShortcutAction.KeyCode.ESCAPE);

		this.textArea.setWidth(100, Unit.PERCENTAGE);
		this.textArea.setHeight(-1, Unit.PIXELS);
		this.horizontalLayout2.addComponent(this.textArea);
		this.horizontalLayout2.setComponentAlignment(this.textArea, Alignment.MIDDLE_CENTER);
		this.horizontalLayout2.setExpandRatio(this.textArea, 90.0F);
		this.gridLayout.setColumns(2);
		this.gridLayout.setRows(2);
		this.label3.setSizeUndefined();
		this.gridLayout.addComponent(this.label3, 0, 0);
		this.lblFileName.setSizeUndefined();
		this.gridLayout.addComponent(this.lblFileName, 1, 0);
		this.gridLayout.setColumnExpandRatio(1, 10.0F);
		final CustomComponent gridLayout_vSpacer = new CustomComponent();
		gridLayout_vSpacer.setSizeFull();
		this.gridLayout.addComponent(gridLayout_vSpacer, 0, 1, 1, 1);
		this.gridLayout.setRowExpandRatio(1, 1.0F);
		this.gridLayout.setSizeFull();
		this.horizontalLayoutUpload.addComponent(this.gridLayout);
		this.horizontalLayoutUpload.setComponentAlignment(this.gridLayout, Alignment.MIDDLE_CENTER);
		this.horizontalLayoutUpload.setExpandRatio(this.gridLayout, 10.0F);
		this.cmdCreate.setSizeUndefined();
		this.horizontalLayout.addComponent(this.cmdCreate);
		this.cmdDownload.setSizeUndefined();
		this.horizontalLayout.addComponent(this.cmdDownload);
		this.label2.setWidth(10, Unit.PIXELS);
		this.label2.setHeight(-1, Unit.PIXELS);
		this.horizontalLayout.addComponent(this.label2);
		this.horizontalLayout.setComponentAlignment(this.label2, Alignment.MIDDLE_CENTER);
		this.cmdCancel.setSizeUndefined();
		this.horizontalLayout.addComponent(this.cmdCancel);
		this.horizontalLayout.setComponentAlignment(this.cmdCancel, Alignment.MIDDLE_LEFT);
		final CustomComponent horizontalLayout_spacer = new CustomComponent();
		horizontalLayout_spacer.setSizeFull();
		this.horizontalLayout.addComponent(horizontalLayout_spacer);
		this.horizontalLayout.setExpandRatio(horizontalLayout_spacer, 1.0F);
		this.horizontalLayout2.setWidth(100, Unit.PERCENTAGE);
		this.horizontalLayout2.setHeight(-1, Unit.PIXELS);
		this.verticalLayout.addComponent(this.horizontalLayout2);
		this.horizontalLayoutUpload.setWidth(100, Unit.PERCENTAGE);
		this.horizontalLayoutUpload.setHeight(-1, Unit.PIXELS);
		this.verticalLayout.addComponent(this.horizontalLayoutUpload);
		this.verticalLayout.setExpandRatio(this.horizontalLayoutUpload, 20.0F);
		this.horizontalLayout.setWidth(100, Unit.PERCENTAGE);
		this.horizontalLayout.setHeight(-1, Unit.PIXELS);
		this.verticalLayout.addComponent(this.horizontalLayout);
		this.verticalLayout.setComponentAlignment(this.horizontalLayout, Alignment.MIDDLE_CENTER);
		this.verticalLayout.setExpandRatio(this.horizontalLayout, 10.0F);
		this.verticalLayout.setWidth(100, Unit.PERCENTAGE);
		this.verticalLayout.setHeight(-1, Unit.PIXELS);
		this.panel.setContent(this.verticalLayout);
		this.panel.setWidth(100, Unit.PERCENTAGE);
		this.panel.setHeight(-1, Unit.PIXELS);
		this.setContent(this.panel);
		this.setWidth(480, Unit.PIXELS);
		this.setHeight(280, Unit.PIXELS);

		this.cmdCreate.addClickListener(event -> this.cmdCreate_buttonClick(event));
		this.cmdCancel.addClickListener(event -> this.cmdCancel_buttonClick(event));
	} // </generated-code>

	// <generated-code name="variables">
	private XdevLabel label3, lblFileName, label2;
	private XdevButton cmdCreate, cmdDownload, cmdCancel;
	private XdevHorizontalLayout horizontalLayout2, horizontalLayoutUpload, horizontalLayout;
	private XdevTextArea textArea;
	private XdevPanel panel;
	private XdevGridLayout gridLayout;
	private XdevVerticalLayout verticalLayout;
	// </generated-code>

}
