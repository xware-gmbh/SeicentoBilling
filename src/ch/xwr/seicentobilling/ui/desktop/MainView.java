
package ch.xwr.seicentobilling.ui.desktop;

import com.vaadin.server.ClientConnector;
import com.vaadin.server.VaadinSession;
import com.vaadin.ui.UI;
import com.xdev.security.authorization.Subject;
import com.xdev.server.aa.openid.auth.AzureUser;
import com.xdev.ui.XdevView;

import ch.xwr.seicentobilling.business.LovState;
import ch.xwr.seicentobilling.business.Seicento;
import ch.xwr.seicentobilling.business.auth.SeicentoUser;

public class MainView extends XdevView {
	//private AzureUser currentUser;
	private SeicentoUser currentUser;

	/**
	 *
	 */
	public MainView() {
		super();
		this.initUI();
	}

	/**
	 * Event handler delegate method for the {@link XdevView}.
	 *
	 * @see ClientConnector.AttachListener#attach(ClientConnector.AttachEvent)
	 * @eventHandlerDelegate Do NOT delete, used by UI designer!
	 */
	private void this_attach(final ClientConnector.AttachEvent event) {
		final Subject sub = VaadinSession.getCurrent().getAttribute(Subject.class);

		if (sub != null && sub instanceof AzureUser)
		{
			//login via azure provides AzureUser first
			final AzureUser aad = (AzureUser) sub;
			this.currentUser = new SeicentoUser(aad);
		} else if (sub != null && sub instanceof SeicentoUser){
			this.currentUser = (SeicentoUser) sub;
		}

		if (this.currentUser.getAssignedAccount() == null) {
			this.currentUser.setAssignedAccount(Seicento.getLoggedInCostAccount(this.currentUser.name()));
		}
		VaadinSession.getCurrent().setAttribute(Subject.class, this.currentUser);

		//this.label.setValue("Hallo " + this.currentUser.name() + "!");
		final UI ux = this.getUI();
		if (ux instanceof DesktopUI) {
			final DesktopUI main = (DesktopUI) this.getUI(); //.getParent().getUI();
			main.loggedIn(true, this.currentUser);
		} else {
			System.out.println("logged in Preview / DevEnv. DesktopUI not available!");
			Seicento.removeGelfAppender();
		}

		applyTheme();

	}

	private void applyTheme() {
		if (this.currentUser.getDbUser() == null) {
			return;
		}
		final LovState.Theme th = this.currentUser.getDbUser().getUsrThemeDesktop();
		if (th == null) {
			return;
		}
		if (th.equals(LovState.Theme.dark)) {
			this.getUI().setTheme("Darksb");
		}
		if (th.equals(LovState.Theme.facebook)) {
			this.getUI().setTheme("Facebook");
		}
		if (th.equals(LovState.Theme.light)) {
			this.getUI().setTheme("SeicentoBilling");
		}

	}


	/*
	 * WARNING: Do NOT edit!<br>The content of this method is always regenerated by
	 * the UI designer.
	 */
	// <generated-code name="initUI">
	private void initUI() {
		this.setSizeFull();

		this.addAttachListener(event -> this.this_attach(event));
	} // </generated-code>

}
