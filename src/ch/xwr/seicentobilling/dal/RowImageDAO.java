
package ch.xwr.seicentobilling.dal;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.ParameterExpression;
import javax.persistence.criteria.Root;

import com.xdev.dal.JPADAO;

import ch.xwr.seicentobilling.entities.RowImage;
import ch.xwr.seicentobilling.entities.RowImage_;
import ch.xwr.seicentobilling.entities.RowObject;

/**
 * Home object for domain model class RowImage.
 *
 * @see RowImage
 */
public class RowImageDAO extends JPADAO<RowImage, Long> {
	public RowImageDAO() {
		super(RowImage.class);
	}

	/**
	 * @queryMethod Do not edit, method is generated by editor!
	 */
	public List<RowImage> findByObject(final RowObject obj) {
		final EntityManager entityManager = em();

		final CriteriaBuilder criteriaBuilder = entityManager.getCriteriaBuilder();

		final ParameterExpression<RowObject> objParameter = criteriaBuilder.parameter(RowObject.class, "obj");

		final CriteriaQuery<RowImage> criteriaQuery = criteriaBuilder.createQuery(RowImage.class);

		final Root<RowImage> root = criteriaQuery.from(RowImage.class);

		criteriaQuery.where(criteriaBuilder.equal(root.get(RowImage_.rowObject), objParameter));

		criteriaQuery.orderBy(criteriaBuilder.asc(root.get(RowImage_.rimNumber)));

		final TypedQuery<RowImage> query = entityManager.createQuery(criteriaQuery);
		query.setParameter(objParameter, obj);
		return query.getResultList();
	}

	public EntityManager getEntityManager() {
		return em();
	}

}