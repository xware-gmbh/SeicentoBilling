version: '2'

services:
  svc-billing:
    image: jmurihub/seicentobilling:20.0.1
    container_name: billing

    environment:
      - APP_STAGE=TEST
      - DB_URL_TEST=jdbc:sqlserver://[SERVER]:1433;database=[DBNAME];encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;
      - DB_USR_TEST=[DBUSER]
      - DB_PWD_TEST=[DBPASSWORD]
      - tenantid=[Company.com]
      - clientid=[Azure ClientID]
      - clientkey=[Azure Client Key]
        #m√∂gliche Werte: azure, local  (default: azure)
      - SEICENTO_LOGIN_METHOD=azure
        #ohne Port. Standard 12201
      - #GELF_URL=udp:1.2.3.4
      
    ports:
      - 19080:8080
    networks:
      - docker-network
    restart: unless-stopped

   
  svc-salary:
    image: jmurihub/seicentosalary:2.0.2
    container_name: salary

    environment:
      - APP_STAGE=TEST
      - DB_URL_TEST=jdbc:sqlserver://[SERVER]:1433;database=[DBNAME];encrypt=true;trustServerCertificate=false;hostNameInCertificate=*.database.windows.net;loginTimeout=30;
      - DB_USR_TEST=[DBUSER]
      - DB_PWD_TEST=[DBPASSWORD]
      - tenantid=[Company.com]
      - clientid=[Azure ClientID]
      - clientkey=[Azure Client Key]
      - SEICENTO_LOGIN_METHOD=azure
      #- GELF_URL=udp://1.2.3.4      
      
    ports:
      - 18080:8080
    networks:
      - docker-network

    restart: unless-stopped


  svc-rproxy:
    #build: ./nginx
    #image: dockregxwr-on.azurecr.io/rproxy
    image: nginx:latest
    container_name: rproxy

    ports:
      # web interface
      - 80:80
      - "443:443"

    depends_on:
      - svc-salary
      - svc-billing

    volumes:
      - ./nginx-TEST.conf:/etc/nginx/conf.d/default.conf
      - ./html:/usr/share/nginx/html
      - ./dh-param/dhparam-4096.pem:/etc/ssl/certs/dhparam-4096.pem
      - /docker-volumes/etc/letsencrypt/live/seicento.xxxxxxxxx.ch/fullchain.pem:/etc/letsencrypt/live/seicento.xxxxxxxx.ch/fullchain.pem
      - /docker-volumes/etc/letsencrypt/live/seicento.xxxxxxxxx.ch/privkey.pem:/etc/letsencrypt/live/seicentoxxxxxxxx.ch/privkey.pem

    restart: always

    networks:
      - docker-network

networks:
  docker-network:
    driver: bridge
    